- hosts: master
  vars:
    dns: 192.168.1.1
    docker_install_compose: false
    docker_users:
      - pi
    docker_pip_executable: pip3
  vars_files:
    - vars.yml

  tasks:
    - name: copy hostname script to master
      copy:
        src: ../hostname_and_ip.sh
        dest: /opt/hostname_and_ip.sh
        mode: "0777"
      become: yes
    - name: Execute the hostname script
      command: sh /opt/hostname_and_ip.sh k8s-master-{{groups['master'].index(inventory_hostname)}} {{ dns }}
      become: yes

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: fixed
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
      become: yes

    - name: install docker
      include_role:
        name: geerlingguy.docker_arm
        apply:
          become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent
      become: yes

    - name: Disable swap
      command: swapoff -a
      become: yes
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
      become: yes

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ hostvars[inventory_hostname].ansible_default_ipv4.address }}
        create: yes
      become: yes
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --ignore-preflight-errors=all --apiserver-advertise-address={{ hostvars[inventory_hostname].ansible_default_ipv4.address }} --apiserver-cert-extra-sans={{ hostvars[inventory_hostname].ansible_default_ipv4.address }}  --node-name k8s-master-{{groups['master'].index(inventory_hostname)}} --pod-network-cidr=10.2.0.0/24
      become: yes

    - name: Setup kubeconfig for vagrant user
      command: mkdir -p /home/pi/.kube
      become: yes

    - name: Copy a new "sudoers" file into place, after passing validation with visudo
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/pi/.kube/config
        remote_src: yes
      become: yes

    - name: Setup kubeconfig for vagrant user
      command: chown pi:pi /home/pi/.kube/config
      become: yes

    - name: k8s version
      shell: kubectl version | base64 | tr -d '\n'
      register: version

    - debug: "{{ version.stdout }}"

    - name: Install waeve pod network
      become: false
      command: kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ version.stdout }}

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
      become: yes

    - name: Copy join command to local file
      copy:
        content: "{{ join_command.stdout_lines[0] }}"
        dest: /home/pi/join.sh
        mode: "0777"
      become: yes
  handlers:
    - name: docker status
      service: name=docker state=started

- hosts: worker
  vars:
    dns: 192.168.1.1
    docker_install_compose: false
    docker_users:
      - pi
    docker_pip_executable: pip3
  vars_files:
    - vars.yml
  tasks:
    - name: copy hostname script to master
      copy:
        src: ./hostname_and_ip.sh
        dest: /opt/hostname_and_ip.sh
        mode: "0777"
      become: yes
    - name: Execute the hostname script
      command: sh /opt/hostname_and_ip.sh k8s-worker-{{groups['worker'].index(inventory_hostname)}} {{ dns }}
      become: yes

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
      become: yes

    - name: install docker
      include_role:
        name: geerlingguy.docker_arm
        apply:
          become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent
      become: yes

    - name: Disable swap
      command: swapoff -a
      become: yes
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
      become: yes

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
      become: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
      become: yes

    - name: Copy the join command to server location
      synchronize: src=/home/pi/join.sh dest=/home/pi/join.sh
      delegate_to: "{{ groups['master'] }}"

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
      become: yes

  handlers:
    - name: docker status
      service: name=docker state=started
